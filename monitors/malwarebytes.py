from config import monconf

import websocket
import time
import json
import datetime
import csv
import os.path

logdir = monconf["logdir"]
country_iso = monconf["country_iso"]
log_suffix = "_malwarebytes.log"
log_fields = ["monsource", "timestamp", "avNames", "malware_mvp", "ctry", "city", "lng", "lat", "scanType"]

# create csv headers - mandatory
def create_csv(path):
	with open(path, 'wb') as f:
		writer = csv.writer(f)
		writer.writerow(log_fields)

def on_message(ws, message):
	try:
		if (message == "#1"):
			ws.send("#2")
			return

		obj = json.loads(message)
		if ("rid" in obj and obj["rid"] == 1):
			ws.send('{"event":"#subscribe","data":{"channel":"detections"},"cid":2}')
			return
		elif (not "rid" in obj):
			obj = json.loads(obj["data"]["data"])

			# estonia only
			if (obj["ctry"] != country_iso):
				return

			now = datetime.datetime.now()
			logpth = logdir + now.strftime("%Y_%m_%d") + log_suffix
			if (not os.path.exists(logpth)):
				create_csv(logpth)

			with open(logpth, 'ab') as f:
				writer = csv.writer(f)
				writer.writerow(["mb",
					now.strftime("%Y-%m-%d %H:%M:%S"), 
					obj[log_fields[2]], 
					obj[log_fields[3]], 
					obj[log_fields[4]], 
					obj[log_fields[5]].encode("utf-8"), 
					obj[log_fields[6]],
					obj[log_fields[7]], 
					obj[log_fields[8]]])
	except:
		print "[!] Message Unhandled"
		print message
		return

def on_error(ws, error):
	print("[!] WS Error")
	print(error)

def on_close(ws):
	print("[!] WS Closed")

def on_open(ws):
	ws.send('{"event":"#handshake","data":{"authToken":null},"cid":1}')

def main():
	#websocket.enableTrace(True)
	while True:
		ws = websocket.WebSocketApp("wss://trace.malwarebytes.com/socketcluster/",
		on_message = on_message,
		on_error = on_error,
		on_close = on_close)
		ws.on_open = on_open
		ws.run_forever()

		time.sleep(2)

if __name__ == "__main__":
	main()
